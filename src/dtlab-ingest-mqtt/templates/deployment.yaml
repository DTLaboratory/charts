apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values: 
                    - {{ .Release.Name }}
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: {{ .Release.Name }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-config
        env:
        - name: KEYSTORE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-mqtt-jks-secret
              key: client.jks.password
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: secrets
          mountPath: /mnt/secrets
          readOnly: true
        resources:
          limits:
            memory: "256Mi"
          requests:
            memory: "128Mi"
            cpu: "256m"
        readinessProbe:
          httpGet:
            path: /observe
            port: management
        livenessProbe:
          httpGet:
            path: /fitness
            port: management
        ports:
        - name: management
          containerPort: {{ .Values.PORT }}
          protocol: TCP
      volumes:
         - name: secrets
           secret:
             secretName: {{ .Release.Name }}-mqtt-jks-secret
             items:
               - key: client.jks
                 path: client.jks

